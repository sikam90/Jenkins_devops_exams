pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        GITHUB_CREDENTIALS = credentials('github-credentials')
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/sikam90/Jenkins_devops_exams.git'
            }
        }

        stage('Build images') {
            steps {
                script {
                    docker.build("sikam/cast-service:latest", "./cast-service")
                    docker.build("sikam/movie-service:latest", "./movie-service")
                    docker.build("sikam/nginx:latest", "./nginx")
                }
            }
        }

        stage('Unit Tests') {
            steps {
                echo 'Exécution des tests unitaires...'
                sh './cast-service/run-unit-tests.sh'
                sh './movie-service/run-unit-tests.sh'
            }
        }

        stage('Acceptance Tests') {
            steps {
                echo 'Exécution des tests d’acceptation...'
                sh './tests/acceptance/run-acceptance-tests.sh'
            }
        }

        stage('Push images') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-credentials') {
                        docker.image("sikam/cast-service:latest").push()
                        docker.image("sikam/movie-service:latest").push()
                        docker.image("sikam/nginx:latest").push()
                    }
                }
            }
        }

        stage('Deploy to Qualification Environment') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig']) {
                    echo "Déploiement dans l'environnement qualification"
                    sh 'kubectl apply -f k8s/qualification/'
                }
            }
        }

        stage('Deploy to Testing Environment') {
            steps {
                input message: 'Valider le déploiement dans l’environnement testing ?', ok: 'Déployer'
                withKubeConfig([credentialsId: 'kubeconfig']) {
                    echo "Déploiement dans l'environnement testing"
                    sh 'kubectl apply -f k8s/testing/'
                }
            }
        }

        stage('Deploy to Production Environment') {
            steps {
                input message: 'Valider le déploiement en production ?', ok: 'Déployer'
                withKubeConfig([credentialsId: 'kubeconfig']) {
                    echo "Déploiement dans l'environnement production"
                    sh 'kubectl apply -f k8s/production/'
                }
            }
        }
    }
}
